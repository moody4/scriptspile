import{_ as i,M as o,p as r,q as l,R as e,t as n,N as s,Q as c,a1 as t}from"./framework-204010b2.js";const d={},p=e("h1",{id:"contributing-guide",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#contributing-guide","aria-hidden":"true"},"#"),n(" Contributing Guide")],-1),u=e("h2",{id:"overview",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overview","aria-hidden":"true"},"#"),n(" Overview")],-1),h=e("p",null,"The purpose of this repository is twofold: to create an open source collection of Adobe applications scripts from various authors in one place, and to maintain a user-friendly site for ordinary designers who could use the collection and benefit from automating their workflow.",-1),m={href:"https://v2.vuepress.vuejs.org",target:"_blank",rel:"noopener noreferrer"},v={href:"https://pages.github.com/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://git-scm.com/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://en.wikipedia.org/wiki/Markdown",target:"_blank",rel:"noopener noreferrer"},k=e("h2",{id:"pre-requirement",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#pre-requirement","aria-hidden":"true"},"#"),n(" Pre-requirement")],-1),f=e("p",null,"Still, there's always software to install. Make sure you have Git and Node.js set up before proceeding:",-1),y={href:"https://git-scm.com/",target:"_blank",rel:"noopener noreferrer"},w={href:"http://nodejs.org",target:"_blank",rel:"noopener noreferrer"},_=e("strong",null,"version 14.18.0+",-1),x=t(`<h2 id="run-locally" tabindex="-1"><a class="header-anchor" href="#run-locally" aria-hidden="true">#</a> Run Locally</h2><p>If you&#39;re undecided and just want to get your feet wet, you can always run and test the repo locally.</p><p>Clone the repo:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/moody4/scriptspile.git
<span class="token builtin class-name">cd</span> scriptspile/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Install dependencies:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Now start the local server:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> run dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>When it starts, type <code>localhost:8080</code> in the browser and that&#39;s it — you&#39;re running the ScriptsPile site instance on your machine.</p><h2 id="project-structure" tabindex="-1"><a class="header-anchor" href="#project-structure" aria-hidden="true">#</a> Project Structure</h2><p>Here is the project structure. Almost all of the functional implementation is in the <code>.vuepress/</code> directory. If you&#39;re just going to add content to the site, you don&#39;t need to worry about that. Most of the time you will only want to look at the markdown files in the <code>authors/</code> and <code>scripts/</code> folders. The former contains scripts author pages (a page includes author contact, links, license info, scripts list...) and the latter — <code>.jsx</code> scripts themselves and <code>.md</code> pages with the description of each individual script.</p><p>For convenience, the <code>scripts/</code> folder is organized to have separate subfolders for each author. Therefore, for every page in the <code>authors/</code> folder, there should be a corresponding folder in the <code>scripts/</code> directory containing that author&#39;s scripts.</p>`,12),A=t(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>├──docs
│  ├──.vuepress
│  │  └─ ...            // technical implementation goes here
│  ├──authors
│  │  ├─ index.md
│  │  └─ ...            // scripts authors .md pages
│  ├──public
│  │  └─ ...            // assets that are not directly referenced in .md files
│  ├──software
│  │  ├─ illustrator.md
│  │  └─ photoshop.md
│  ├──scripts
│  │  └─ ...            // scripts .md pages
│  ├─ about.md
│  ├─ contribute.md     // the page you are now on
│  ├─ index.md
│  └─ tags.md
├─ .gitignore
└─ package.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="adding-content" tabindex="-1"><a class="header-anchor" href="#adding-content" aria-hidden="true">#</a> Adding Content</h2><p>For now, let&#39;s assume that you want to add an author&#39;s page and illustrator script to your locally running ScriptsPile instance just for testing purposes.</p><h3 id="author-page" tabindex="-1"><a class="header-anchor" href="#author-page" aria-hidden="true">#</a> Author Page</h3><p>First, you need to create a <code>&lt;author&#39;s name&gt;.md</code> file in the <code>authors/</code> directory and fill it with author information. The basic template for such file is below, but you can add some arbitrary chapters, e.g. with short bio or blog link.</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> &lt;author&#39;s name&gt;</span>

<span class="token title important"><span class="token punctuation">##</span> Contact</span>
// Email, social links...

<span class="token title important"><span class="token punctuation">##</span> License Info</span>
// The license type under which author scripts are distributed

<span class="token title important"><span class="token punctuation">##</span> Scripts</span>
// Chapter with vue component that dynamically renders the author scripts list
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PageFilter</span> <span class="token attr-name">filterKey</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>author<span class="token punctuation">&quot;</span></span> <span class="token attr-name">filterValue</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>&lt;author&#39;s name&gt;<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>A filled, ready to render markdown file will look like this:</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> Alice</span>

<span class="token title important"><span class="token punctuation">##</span> Contact</span>
Email <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>alice@gmail.com</span><span class="token punctuation">&gt;</span></span>
GitHub <span class="token url">[<span class="token content">@alice</span>](<span class="token url">https://github.com/alice</span>)</span>

<span class="token title important"><span class="token punctuation">##</span> License Info</span>
All scripts are licensed under the MIT license.

<span class="token title important"><span class="token punctuation">##</span> Scripts</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PageFilter</span> <span class="token attr-name">filterKey</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>author<span class="token punctuation">&quot;</span></span> <span class="token attr-name">filterValue</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>alice<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>And will be placed here:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>├─ docs
│  ├─authors
│  │ ├─ index.md
│  │ └─ alice.md		// Alice&#39;s page
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="author-scripts" tabindex="-1"><a class="header-anchor" href="#author-scripts" aria-hidden="true">#</a> Author Scripts</h3>`,11),j=e("code",null,".md",-1),q=e("code",null,"scripts/",-1),C=e("code",null,".jsx",-1),T={href:"https://quickref.me/yaml",target:"_blank",rel:"noopener noreferrer"},N=t(`<p>Basic script page template:</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token front-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> &lt;script name<span class="token punctuation">&gt;</span>
<span class="token key atrule">author</span><span class="token punctuation">:</span> &lt;script author<span class="token punctuation">&gt;</span>
<span class="token key atrule">software</span><span class="token punctuation">:</span> &lt;script&#39;s target Adobe application<span class="token punctuation">&gt;</span>
<span class="token key atrule">tags</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>&lt;list of tags<span class="token punctuation">,</span> separated with comma<span class="token punctuation">&gt;</span><span class="token punctuation">]</span></span>
<span class="token punctuation">---</span></span>

<span class="token title important"><span class="token punctuation">#</span> &lt;script name&gt;</span>

// Here is an arbitrary script description 
// And much appreciated, attached visual references, like <span class="token code-snippet code keyword">\`.jpeg\`</span>, <span class="token code-snippet code keyword">\`.gif\`</span>, etc.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Visual references to script behavior are placed in the <code>scripts/&lt;author&#39;s name&gt;/assets</code> folder and relatively linked in the <code>.md</code> file using regular markdown syntax.</p><p>So here is the example of a filled script page ready for rendering:</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token front-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> CropArtboard
<span class="token key atrule">author</span><span class="token punctuation">:</span> Alice
<span class="token key atrule">software</span><span class="token punctuation">:</span> illustrator
<span class="token key atrule">tags</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>artboard<span class="token punctuation">,</span> crop<span class="token punctuation">]</span></span>
<span class="token punctuation">---</span></span>

<span class="token title important"><span class="token punctuation">#</span> CropArtboard</span>

This script automatically crops all content in a document to the size of its artboard. This script is especially useful for quickly preparing documents for web or print output. It can save time and effort by eliminating the need to manually crop each artboard, and it can ensure that the output is always consistent.

<span class="token url"><span class="token operator">!</span>[<span class="token content">CropArtboard</span>](<span class="token url">./assets/CropArtboard.gif</span>)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>And the folder structure will look like this:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>├─ docs
│  ├─scripts
│  │ └─alice                    // author folder
│  │   ├─assets                 // assets folder
│  │   │ └─ CropArtboard.gif    // visual reference 
│  │   ├─ CropArtboard.jsx      // jsx script 
│  │   └─ CropArtboard.md       // script description 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>Paths should not have spaces</p></div><h3 id="testing-changes" tabindex="-1"><a class="header-anchor" href="#testing-changes" aria-hidden="true">#</a> Testing Changes</h3><p>Now launch your local ScriptsPile instance and have a look at the result of your efforts.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> run dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="contributing-to-main-repo" tabindex="-1"><a class="header-anchor" href="#contributing-to-main-repo" aria-hidden="true">#</a> Contributing to Main Repo</h2><p><em>// There will be a step-by-step guide on how to contribute to the main repository</em></p>`,13);function S(I,P){const a=o("ExternalLinkIcon");return r(),l("div",null,[p,u,h,e("p",null,[e("a",m,[n("Vuepress"),s(a)]),n(" + "),e("a",v,[n("Github Pages"),s(a)]),n(" met both of the above requirements, so we went for it.")]),e("p",null,[n("While participation in the development and maintenance of the site is highly encouraged, when we talk about contributing to the project, we mean primarily contributing to the script collection, so there is no need for strong technical skills if you're willing to participate. The project is structured to separate adding content logic from the technical part as much as possible with the tools we have. Superficial knowledge of "),e("a",b,[n("Git"),s(a)]),n(" and "),e("a",g,[n("Markdown"),s(a)]),n(" is all you really need.")]),k,f,e("ul",null,[e("li",null,[e("a",y,[n("Git"),s(a)])]),e("li",null,[e("a",w,[n("Node.js"),s(a)]),n(),_])]),x,c(" But for a user, scripts pages are accessed by a direct link `scriptspile.com/scripts/<script_name>` "),A,e("p",null,[n("Adding script is very similar, with the nuance that when you're creating a script "),j,n(" page in the "),q,n(" folder, you also need to place a "),C,n(" script there, so that site users will be able to download it. Also, script markdown pages have a "),e("a",T,[n("YAML"),s(a)]),n(" header that contains script metadata, such as script name, script author, tags, etc. This header will not be rendered as is, but data will be actively used for site functioning.")]),N])}const M=i(d,[["render",S],["__file","contribute.html.vue"]]);export{M as default};
